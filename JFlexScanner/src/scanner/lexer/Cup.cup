package scanner.lexer;

import java_cup.runtime.*;
import java.io.Reader;
import java.io.FileReader;

class Parser;

parser code {:

    public static void main(String[] args)
    {
        try
        {
            Reader reader = new FileReader(args[0]);
            Lexer scanner = new Lexer(reader);
            Parser parser = new Parser(scanner);
            Object result = parser.parse().value;
            System.out.println("\n*** Resultados finales ***");
            System.out.println(result);
        }
        catch (Exception ex)
        {
            ex.printStackTrace();
        }
    }

:};

/* Terminals (tokens returned by the scanner). */

// Paréntesis.
terminal LPAREN, RPAREN, LBRACKET, RBRACKET;

// Operadores aritméticos.
terminal PLUS, MINUS, DIV, TIMES, MOD, PLUS_EQUALS, MINUS_EQUALS, DIV_EQUALS, TIMES_EQUALS;

// Operadores de comparación.
terminal EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_EQUALS_THAN, GREATER_LESS_THAN, OR, AND, NOT, XOR;

// Operadores de bit.
terminal SHIFT_LEFT, SHIFT_RIGHT, SHIFT_LEFT_EQUALS, SHIFT_RIGHT_EQUALS;

// Operadores de asignación.
terminal ASSIGNMENT;

terminal Integer NUMBER;
terminal Double REAL;
terminal String STRING;
terminal Character CHARACTER;
terminal String IDENTIFIER;
terminal String RESERVED_WORDS;

/* Non terminals */
non terminal Integer expr;

/* Precedences */
precedence left PLUS, MINUS;
precedence left TIMES, DIV;

expr  ::= expr:e1 PLUS  expr:e2        {: RESULT = e1+e2; :}
        | expr:e1 MINUS expr:e2        {: RESULT = e1-e2; :}
        | expr:e1 TIMES expr:e2        {: RESULT = e1*e2; :}
        | MINUS expr:e                 {: RESULT = -e;    :}
        | NUMBER:n	               {: RESULT = n;     :};