package scanner.gui;

import compiler.CompilationReport;
import compiler.Report;
import compiler.SemanticAnalysisResult;
import compiler.parser.SyntacticAnalysisReport;
import compiler.parser.SyntacticAnalysisResult;
import compiler.parser.SyntacticAnalyzer;
import compiler.scanner.LexicalAnalysisReport;
import compiler.scanner.LexicalAnalysisResult;
import compiler.scanner.LexicalAnalyzer;
import file.utils.FileManager;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Leo
 */
public class WindowCompiler extends javax.swing.JFrame
{
    private final FileManager fileManager;
    private Report report;
    private File selectedFile;
    private String action;
    
    /**
     * Creates new form WindowScanner.
     */
    public WindowCompiler()
    {
        initComponents();
        
        this.codeArea.getDocument().addDocumentListener(new DocumentListener() {

            private void performAction()
            {
                saveReportButton.setEnabled(false);
            }
            
            @Override
            public void insertUpdate(DocumentEvent e)
            {
                performAction();
            }

            @Override
            public void removeUpdate(DocumentEvent e)
            {
                performAction();
            }

            @Override
            public void changedUpdate(DocumentEvent e)
            {
                performAction();
            }
            
        });
        
        this.action = "compile";
        this.fileManager = new FileManager();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actionButtons = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        textboxesPanel = new javax.swing.JPanel();
        codeAreaScrollPane = new javax.swing.JScrollPane();
        codeArea = new javax.swing.JTextArea();
        resultAreaScrollPane = new javax.swing.JScrollPane();
        contentResultArea = new javax.swing.JTextArea();
        errorAreaScrollPane = new javax.swing.JScrollPane();
        errorResultArea = new javax.swing.JTextArea();
        labelsPanel = new javax.swing.JPanel();
        errorLabel = new javax.swing.JLabel();
        resultLabel = new javax.swing.JLabel();
        textLabel = new javax.swing.JLabel();
        buttonsPanel = new javax.swing.JPanel();
        analyzeButton = new javax.swing.JButton();
        saveReportButton = new javax.swing.JButton();
        loadFileButton = new javax.swing.JButton();
        compileRadioButton = new javax.swing.JRadioButton();
        scanRadioButton = new javax.swing.JRadioButton();
        parseRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compiler GUI");

        mainPanel.setLayout(new java.awt.BorderLayout());

        textboxesPanel.setLayout(new javax.swing.BoxLayout(textboxesPanel, javax.swing.BoxLayout.LINE_AXIS));

        codeArea.setColumns(20);
        codeArea.setRows(5);
        codeArea.setMinimumSize(new java.awt.Dimension(0, 1000));
        codeAreaScrollPane.setViewportView(codeArea);

        textboxesPanel.add(codeAreaScrollPane);

        contentResultArea.setEditable(false);
        contentResultArea.setColumns(20);
        contentResultArea.setRows(5);
        resultAreaScrollPane.setViewportView(contentResultArea);

        textboxesPanel.add(resultAreaScrollPane);

        errorResultArea.setEditable(false);
        errorResultArea.setColumns(20);
        errorResultArea.setForeground(new java.awt.Color(255, 0, 0));
        errorResultArea.setRows(5);
        errorAreaScrollPane.setViewportView(errorResultArea);

        textboxesPanel.add(errorAreaScrollPane);

        mainPanel.add(textboxesPanel, java.awt.BorderLayout.CENTER);

        errorLabel.setText("Errores:");

        resultLabel.setText("Resultados:");

        textLabel.setText("Texto a analizar:");

        javax.swing.GroupLayout labelsPanelLayout = new javax.swing.GroupLayout(labelsPanel);
        labelsPanel.setLayout(labelsPanelLayout);
        labelsPanelLayout.setHorizontalGroup(
            labelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, labelsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addComponent(resultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                .addComponent(errorLabel)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        labelsPanelLayout.setVerticalGroup(
            labelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(labelsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(errorLabel)
                    .addComponent(resultLabel)
                    .addComponent(textLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(labelsPanel, java.awt.BorderLayout.NORTH);

        analyzeButton.setText("Analizar");
        analyzeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyzeButtonActionPerformed(evt);
            }
        });

        saveReportButton.setText("Guardar Reporte");
        saveReportButton.setEnabled(false);
        saveReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveReportButtonActionPerformed(evt);
            }
        });

        loadFileButton.setText("Cargar Archivo");
        loadFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFileButtonActionPerformed(evt);
            }
        });

        actionButtons.add(compileRadioButton);
        compileRadioButton.setSelected(true);
        compileRadioButton.setText("Compile");
        compileRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileRadioButtonActionPerformed(evt);
            }
        });

        actionButtons.add(scanRadioButton);
        scanRadioButton.setText("Scan");
        scanRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanRadioButtonActionPerformed(evt);
            }
        });

        actionButtons.add(parseRadioButton);
        parseRadioButton.setText("Parse");
        parseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(analyzeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loadFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveReportButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addComponent(scanRadioButton)
                .addGap(18, 18, 18)
                .addComponent(parseRadioButton)
                .addGap(18, 18, 18)
                .addComponent(compileRadioButton)
                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(analyzeButton)
                    .addComponent(saveReportButton)
                    .addComponent(loadFileButton)
                    .addComponent(compileRadioButton)
                    .addComponent(scanRadioButton)
                    .addComponent(parseRadioButton))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        loadFileButton.getAccessibleContext().setAccessibleName("");

        mainPanel.add(buttonsPanel, java.awt.BorderLayout.SOUTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void runLexicalAnalysis()
    {
        LexicalAnalyzer analyzer = new LexicalAnalyzer();
        LexicalAnalysisResult result = analyzer.analyze(this.codeArea.getText());
        this.report = new LexicalAnalysisReport(result);
    }
    
    private void runSyntacticAnalysis()
    {
        SyntacticAnalyzer analyzer = new SyntacticAnalyzer(false);
        SyntacticAnalysisResult result = analyzer.analyze(this.codeArea.getText());
        this.report = new SyntacticAnalysisReport(result);
    }
    
    private void runCompilationProcess()
    {
        SyntacticAnalyzer analyzer = new SyntacticAnalyzer(true);
        analyzer.analyze(this.codeArea.getText());
        LexicalAnalysisResult r1 = analyzer.getScanner().getResult();
        SyntacticAnalysisResult r2 = analyzer.getParser().getSyntacticResult();
        SemanticAnalysisResult  r3 = analyzer.getParser().getSemanticResult();
        this.report = new CompilationReport(r1, r2, r3);
    }
    
    private JFileChooser createFileChooser()
    {
        JFileChooser fileChooser = new JFileChooser();
        File workingDirectory = new File(System.getProperty("user.dir"));
        fileChooser.setCurrentDirectory(workingDirectory);
        return fileChooser;
    }

    private void analyzeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyzeButtonActionPerformed
        
        switch (this.action)
        {
            case "scan" :
                runLexicalAnalysis();
                break;
            case "parse" :
                runSyntacticAnalysis();
                break;
            case "compile":
                runCompilationProcess();
                break;
        }
        
        this.errorResultArea.setText(this.report.getReportErrors());
        this.contentResultArea.setText(this.report.getReportResults());
        this.saveReportButton.setEnabled(true);
    }//GEN-LAST:event_analyzeButtonActionPerformed

    private void saveReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveReportButtonActionPerformed
        JFileChooser fileChooser = createFileChooser();
        fileChooser.setDialogTitle("Specify a file to save the report");
        int userSelection = fileChooser.showSaveDialog(this);
        
        if (userSelection == JFileChooser.APPROVE_OPTION)
        {
            File file = fileChooser.getSelectedFile();
            this.fileManager.writeToFile(file, this.report.getReportContent());
            JOptionPane.showMessageDialog(this, "Reporte guardado exitosamente en:\n" + file.getAbsolutePath());
        }
    }//GEN-LAST:event_saveReportButtonActionPerformed

    private void loadFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFileButtonActionPerformed
        JFileChooser fileChooser = createFileChooser();
        fileChooser.setDialogTitle("Specify a file to read");   
        int userSelection = fileChooser.showSaveDialog(this);
        
        if (userSelection == JFileChooser.APPROVE_OPTION)
        {
            this.selectedFile = fileChooser.getSelectedFile();
            String fileContent = this.fileManager.readFile(this.selectedFile);
            this.codeArea.setText(fileContent);
        }
    }//GEN-LAST:event_loadFileButtonActionPerformed

    private void scanRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanRadioButtonActionPerformed
        this.action = "scan";
    }//GEN-LAST:event_scanRadioButtonActionPerformed

    private void parseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parseRadioButtonActionPerformed
        this.action = "parse";
    }//GEN-LAST:event_parseRadioButtonActionPerformed

    private void compileRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileRadioButtonActionPerformed
        this.action = "compile";
    }//GEN-LAST:event_compileRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WindowCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WindowCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WindowCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WindowCompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new WindowCompiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup actionButtons;
    private javax.swing.JButton analyzeButton;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JTextArea codeArea;
    private javax.swing.JScrollPane codeAreaScrollPane;
    private javax.swing.JRadioButton compileRadioButton;
    private javax.swing.JTextArea contentResultArea;
    private javax.swing.JScrollPane errorAreaScrollPane;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextArea errorResultArea;
    private javax.swing.JPanel labelsPanel;
    private javax.swing.JButton loadFileButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton parseRadioButton;
    private javax.swing.JScrollPane resultAreaScrollPane;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JButton saveReportButton;
    private javax.swing.JRadioButton scanRadioButton;
    private javax.swing.JLabel textLabel;
    private javax.swing.JPanel textboxesPanel;
    // End of variables declaration//GEN-END:variables
}
